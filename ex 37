
public class Problem37 {
	
	    public static int PrimosTruncatable() {
	        int NPrimo = 0;
	        int soma = 0;

	        int i = 10;
	        while (NPrimo < 11) {
	            if (eTruncatable(i)) {
	                NPrimo++;
	                soma += i;
	            }
	            i++;
	        }
	        return (soma);
	    }

	    private static boolean eTruncatable(int x) {
	        return DireitoTruncatable(x) && EsquerdoTruncatable(x);
	    }

	    private static boolean Primo(int x) {
	        if (x == 0 || x == 1) {
	            return false;
	        } else if (x == 2) {
	            return true;
	        } else {
	            if (x % 2 == 0) {
	                return false;
	            }
	            for (int i = 3; i <= Math.sqrt(x); i += 2) {
	                if (x % i == 0) {
	                    return false;
	                }
	            }
	            return true;
	        }
	    }

	    private static boolean DireitoTruncatable(int x) {
	        while (x != 0) {
	            if (!Primo(x)) {
	                return false;
	            }
	            x /= 10;
	        }
	        return true;
	    }

	    private static boolean EsquerdoTruncatable(int x) {
	        for (int i = (int) Math.pow(10, 4); i != 1; ) {
	            if (!Primo(x % i)) {
	                return false;
	            }
	            i /= 10;
	        }
	        return true;
	    }

	    public static void main(String[] args) {
	        System.out.println(PrimosTruncatable());
	    }
	}


