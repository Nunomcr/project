import java.util.ArrayList;
	import java.util.Iterator;

public class Problem21 {

			public static int Sum;
			public static int xSum;
			
			public static void main(String[] args)
			{
				int sum = 0;
				for (int i = 0; i < 10000; i++)
				{if (isAmicable(i))
					{sum += xSum;
					}
				}System.out.println(sum);
				
			
			}
			private static int sumList(ArrayList<Integer> list)
			{int sum = 0;
				for (Iterator<Integer> iter = list.iterator(); iter.hasNext();)
				{sum += iter.next();}
				return sum;}
			private static ArrayList<Integer> createList(int n)
			{long root = Math.round(Math.sqrt(n)) + 1;
			ArrayList<Integer> test = new ArrayList<Integer>();
				test.add(1);
				for (int i = 2; i <= root; i++){
					if (n % i == 0)
					{	test.add(i);		
						test.add(n/i);}}
				return test;}
			private static boolean isAmicable(int n)
			{ArrayList<Integer> NList = new ArrayList<Integer>(createList(n));		
				xSum = sumList(NList);
				ArrayList<Integer> MList = new ArrayList<Integer>(createList(xSum));
				Sum = sumList(MList);
				if ((Sum == n) && (Sum != xSum))
					return true;	
				return false;}
			
			}
		



